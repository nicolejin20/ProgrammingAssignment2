## Put comments here that give an overall description of what your
## functions do

##  This function creates a special "matrix" object that can cache its inverse

makeCacheMatrix <- function(x = matrix()) {
    set<-function(y)
    {
      x<<-y
      m<<-NULL
    }
    get <- function() 
    {
      x
    }
    setInverse <- function(inverse) 
    {
      i <<- inverse
    }
    getInverse <- function() 
    {
      m
    }
    list(set = set, get = get,
         setInverse = setInverse,
         getInverse = getInverse)
  }


## This function computes the inverse of the special "matrix" returned by makeCacheMatrix above

 cacheSolve <- function(x, ...) {
    m <- x$getInverse()
    if( !is.null(m) ) {
      message("retrieve data from the cache")
      return(m)
    }
    x$setInverse(m)
    m      
  }
